server:
  port: 8082
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
spring:
  application:
    name: cloud-picture-backend
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/cloud_picture
    username: root
    password: 1111
  # Redis 配置
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 5000
  # session 配置
  session:
    store-type: redis
    # session 30 天过期
    timeout: 2592000
  # 邮箱配置
#  mail:
#    from: ${MAIL_FROM:your-email@example.com}  # 发件人邮箱
#    password: ${MAIL_PASSWORD:your-email-password}  # 邮箱授权码
#    host: ${MAIL_HOST:smtp.example.com}  # SMTP服务器地址
#    port: ${MAIL_PORT:465}  # SMTP服务器端口
#    admin: ${ADMIN_MAIL:admin@example.com}  # 管理员邮箱
  # 开放更大的文件上传体积
  servlet:
    multipart:
      max-file-size: 10MB
  # 空间图片分表
  shardingsphere:
    datasource:
      names: cloud_picture
      cloud_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/cloud_picture
        username: root
        password: 1111
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: cloud_picture.picture # 动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.hins.cloudpicturebackend.manager.sharding.PictureShardingAlgorithm
    props:
      sql-show: true
mybatis-plus:
  configuration:
    # MyBatis 配置
    map-underscore-to-camel-case: false
    # 仅在开发环境开启日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    enable-sql-runner: true
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.hins.cloudpicturebackend.controller
# 对象存储配置（需要从腾讯云获取）
#cos:
#  client:
#    host: ${COS_HOST:https://your-bucket.cos.region.myqcloud.com}  # 存储桶访问域名
#    secretId: ${COS_SECRET_ID:your-secret-id}  # 腾讯云 SecretId
#    secretKey: ${COS_SECRET_KEY:your-secret-key}  # 腾讯云 SecretKey
#    region: ${COS_REGION:ap-region}  # 存储桶所在地域
#    bucket: ${COS_BUCKET:your-bucket-name}  # 存储桶名称
# 图片搜索配置
#pexels:
#  apiKey:xxx
# 阿里云 AI 配置
#aliYunAi:
#  painting:
#    apiKey: ${ALI_AI_API_KEY:your-api-key}  # 阿里云 AI API密钥
#  bailian:
#    apiKey: xxx
#    appId: xxx